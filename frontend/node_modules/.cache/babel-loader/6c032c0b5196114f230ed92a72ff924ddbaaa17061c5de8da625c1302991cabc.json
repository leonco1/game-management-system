{"ast":null,"code":"var _jsxFileName = \"/Users/leonidtrajkoski/Desktop/game-management-system/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './tailwind.css';\nimport { ApolloProvider, ApolloClient, createHttpLink, InMemoryCache, createQueryPreloader } from '@apollo/client';\nimport { AUTH_TOKEN } from './utils/constants';\nimport { setContext } from '@apollo/client/link/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000'\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem(AUTH_TOKEN);\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 2\n}, this));\nexport const preloadQuery = createQueryPreloader(client);","map":{"version":3,"names":["React","ReactDOM","App","ApolloProvider","ApolloClient","createHttpLink","InMemoryCache","createQueryPreloader","AUTH_TOKEN","setContext","jsxDEV","_jsxDEV","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","root","createRoot","document","getElementById","render","children","fileName","_jsxFileName","lineNumber","columnNumber","preloadQuery"],"sources":["/Users/leonidtrajkoski/Desktop/game-management-system/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './tailwind.css' \n import {ApolloProvider,ApolloClient,createHttpLink,InMemoryCache, createQueryPreloader} from '@apollo/client'\nimport { AUTH_TOKEN } from './utils/constants';\nimport { setContext } from '@apollo/client/link/context';\n\nconst httpLink= createHttpLink({\n  uri:'http://localhost:4000'\n})\n\nconst authLink=setContext((_,{headers})=>{\n  const token=localStorage.getItem(AUTH_TOKEN)\n  return{\n      headers:{\n        ...headers,\n        authorization:token? `Bearer ${token}`:''\n      }\n  }\n})\nconst client =new ApolloClient({\n  \n  link:authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n  \n})\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n <ApolloProvider \n client={client}\n >\n  <App/>\n </ApolloProvider>\n);\n\n\nexport const preloadQuery=createQueryPreloader(client)\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,gBAAgB;AACtB,SAAQC,cAAc,EAACC,YAAY,EAACC,cAAc,EAACC,aAAa,EAAEC,oBAAoB,QAAO,gBAAgB;AAC9G,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,UAAU,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,QAAQ,GAAEP,cAAc,CAAC;EAC7BQ,GAAG,EAAC;AACN,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAACL,UAAU,CAAC,CAACM,CAAC,EAAC;EAACC;AAAO,CAAC,KAAG;EACvC,MAAMC,KAAK,GAACC,YAAY,CAACC,OAAO,CAACX,UAAU,CAAC;EAC5C,OAAM;IACFQ,OAAO,EAAC;MACN,GAAGA,OAAO;MACVI,aAAa,EAACH,KAAK,GAAE,UAAUA,KAAK,EAAE,GAAC;IACzC;EACJ,CAAC;AACH,CAAC,CAAC;AACF,MAAMI,MAAM,GAAE,IAAIjB,YAAY,CAAC;EAE7BkB,IAAI,EAACR,QAAQ,CAACS,MAAM,CAACX,QAAQ,CAAC;EAC9BY,KAAK,EAAE,IAAIlB,aAAa,CAAC;AAE3B,CAAC,CAAC;AAEF,MAAMmB,IAAI,GAAGxB,QAAQ,CAACyB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACVlB,OAAA,CAACR,cAAc;EACfkB,MAAM,EAAEA,MAAO;EAAAS,QAAA,eAEdnB,OAAA,CAACT,GAAG;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACjB,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAC5B,oBAAoB,CAACc,MAAM,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}