{"ast":null,"code":"var _jsxFileName = \"/Users/leonidtrajkoski/Desktop/game-management-system/frontend/src/pages/NewDeveloper.js\",\n  _s = $RefreshSig$();\nimport { useApolloClient } from \"@apollo/client\";\nimport DeveloperForm from \"../components/DeveloperForm\";\nimport client from \"../utils/apolloClient\";\nimport { gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CREATE_NEW_DEVELOPER_MUTATION = gql`\nmutation createDeveloper($name: String!, $surname: String!, $userEmail: String!, $gameTitle: String!, $imageURL: String!, $gameGenre: String!) {\n  createDeveloper(name: $name, surname: $surname, email: $userEmail, gameTitle: $gameTitle, imageURL: $imageURL, gameGenre: $gameGenre) {\n    name\n    surname\n    userEmail\n    games {\n      title\n      genres {\n        name\n      }\n    }\n  }\n}\n`;\nexport default function NewDeveloperPage() {\n  _s();\n  const client = useApolloClient();\n  return /*#__PURE__*/_jsxDEV(DeveloperForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 8\n  }, this);\n}\n_s(NewDeveloperPage, \"bRce2qNAOkF4RDs+MXWx0he9v30=\", false, function () {\n  return [useApolloClient];\n});\n_c = NewDeveloperPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  console.log(data.get('game'));\n  const developerData = {\n    name: data.get(\"name\"),\n    surname: data.get(\"surname\"),\n    userEmail: data.get(\"email\"),\n    gameTitle: JSON.parse(data.get(\"game\")).title,\n    imageURL: JSON.parse(data.get(\"game\")).imageURL,\n    description: JSON.parse(data.get(\"game\")).description,\n    gameGenre: JSON.parse(data.get(\"game\")).genre\n  };\n  try {\n    const response = await client.mutate({\n      mutation: CREATE_NEW_DEVELOPER_MUTATION,\n      variables: developerData\n    });\n    return response.data.createDeveloper;\n  } catch (error) {\n    console.error(\"Error creating developer:\", error);\n    return {\n      error: error.message\n    };\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewDeveloperPage\");","map":{"version":3,"names":["useApolloClient","DeveloperForm","client","gql","jsxDEV","_jsxDEV","CREATE_NEW_DEVELOPER_MUTATION","NewDeveloperPage","_s","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","console","log","get","developerData","name","surname","userEmail","gameTitle","JSON","parse","title","imageURL","description","gameGenre","genre","response","mutate","mutation","variables","createDeveloper","error","message","$RefreshReg$"],"sources":["/Users/leonidtrajkoski/Desktop/game-management-system/frontend/src/pages/NewDeveloper.js"],"sourcesContent":["import { useApolloClient } from \"@apollo/client\";\nimport DeveloperForm from \"../components/DeveloperForm\";\nimport client from \"../utils/apolloClient\";\nimport { gql } from \"@apollo/client\";\n\nconst CREATE_NEW_DEVELOPER_MUTATION=gql`\nmutation createDeveloper($name: String!, $surname: String!, $userEmail: String!, $gameTitle: String!, $imageURL: String!, $gameGenre: String!) {\n  createDeveloper(name: $name, surname: $surname, email: $userEmail, gameTitle: $gameTitle, imageURL: $imageURL, gameGenre: $gameGenre) {\n    name\n    surname\n    userEmail\n    games {\n      title\n      genres {\n        name\n      }\n    }\n  }\n}\n`\nexport default function NewDeveloperPage()\n{\nconst client=useApolloClient()\nreturn <DeveloperForm/>\n}\n\nexport async function action({ request,params }) {\n    const data = await request.formData();\n    console.log(data.get('game'))\n    const developerData = {\n      name: data.get(\"name\"),\n      surname: data.get(\"surname\"),\n      userEmail: data.get(\"email\"),\n      gameTitle: JSON.parse(data.get(\"game\")).title,\n      imageURL: JSON.parse(data.get(\"game\")).imageURL,\n      description:JSON.parse(data.get(\"game\")).description,\n      gameGenre: JSON.parse(data.get(\"game\")).genre,\n    };\n\n    try {\n      const response = await client.mutate({\n        mutation:(CREATE_NEW_DEVELOPER_MUTATION),\n        variables: developerData,\n      });\n  \n      return response.data.createDeveloper;\n    } catch (error) {\n      console.error(\"Error creating developer:\", error);\n      return { error: error.message };\n    }\n  }\n  "],"mappings":";;AAAA,SAASA,eAAe,QAAQ,gBAAgB;AAChD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,GAAG,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,6BAA6B,GAACH,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAe,SAASI,gBAAgBA,CAAA,EACxC;EAAAC,EAAA;EACA,MAAMN,MAAM,GAACF,eAAe,CAAC,CAAC;EAC9B,oBAAOK,OAAA,CAACJ,aAAa;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACvB;AAACJ,EAAA,CAJuBD,gBAAgB;EAAA,QAE3BP,eAAe;AAAA;AAAAa,EAAA,GAFJN,gBAAgB;AAMxC,OAAO,eAAeO,MAAMA,CAAC;EAAEC,OAAO;EAACC;AAAO,CAAC,EAAE;EAC7C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACrCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC,CAAC;EAC7B,MAAMC,aAAa,GAAG;IACpBC,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,OAAO,EAAEP,IAAI,CAACI,GAAG,CAAC,SAAS,CAAC;IAC5BI,SAAS,EAAER,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IAC5BK,SAAS,EAAEC,IAAI,CAACC,KAAK,CAACX,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC,CAAC,CAACQ,KAAK;IAC7CC,QAAQ,EAAEH,IAAI,CAACC,KAAK,CAACX,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC,CAAC,CAACS,QAAQ;IAC/CC,WAAW,EAACJ,IAAI,CAACC,KAAK,CAACX,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC,CAAC,CAACU,WAAW;IACpDC,SAAS,EAAEL,IAAI,CAACC,KAAK,CAACX,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC,CAAC,CAACY;EAC1C,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMhC,MAAM,CAACiC,MAAM,CAAC;MACnCC,QAAQ,EAAE9B,6BAA8B;MACxC+B,SAAS,EAAEf;IACb,CAAC,CAAC;IAEF,OAAOY,QAAQ,CAACjB,IAAI,CAACqB,eAAe;EACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdpB,OAAO,CAACoB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,OAAO;MAAEA,KAAK,EAAEA,KAAK,CAACC;IAAQ,CAAC;EACjC;AACF;AAAC,IAAA3B,EAAA;AAAA4B,YAAA,CAAA5B,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}