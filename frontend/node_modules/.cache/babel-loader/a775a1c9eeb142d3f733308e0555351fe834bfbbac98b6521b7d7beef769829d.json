{"ast":null,"code":"var _jsxFileName = \"/Users/leonidtrajkoski/Desktop/game-management-system/frontend/src/pages/GameDetails.js\",\n  _s = $RefreshSig$();\nimport { createQueryPreloader, gql, useAp } from \"@apollo/client\";\nimport Game from \"../components/Game\";\nimport { useLoaderData } from \"react-router\";\nimport { useReadQuery, useApolloClient } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_GAME_BY_ID_QUERY = gql`query getGameById($id:ID!)\n{\n    getGameById(id:$id)\n    {\n        title,\n        imageURL,\n        genres\n        {\n            id,\n            name\n        }\n    }\n}\n`;\nexport default function GameDetailsPage() {\n  _s();\n  const queryRef = useLoaderData();\n  const {\n    data\n  } = useReadQuery(queryRef);\n  return /*#__PURE__*/_jsxDEV(Game, {\n    game: data.getGameById,\n    isSingle: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n}\n_s(GameDetailsPage, \"+NDhJfIP4peif+PDrDnjgIVpT7g=\", false, function () {\n  return [useLoaderData, useReadQuery];\n});\n_c = GameDetailsPage;\nexport async function loader({\n  params\n}) {\n  const id = params.gameId.substring(1);\n  return preloadQuery(GET_GAME_BY_ID_QUERY, {\n    variables: {\n      id\n    }\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"GameDetailsPage\");","map":{"version":3,"names":["createQueryPreloader","gql","useAp","Game","useLoaderData","useReadQuery","useApolloClient","jsxDEV","_jsxDEV","GET_GAME_BY_ID_QUERY","GameDetailsPage","_s","queryRef","data","game","getGameById","isSingle","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","params","id","gameId","substring","preloadQuery","variables","$RefreshReg$"],"sources":["/Users/leonidtrajkoski/Desktop/game-management-system/frontend/src/pages/GameDetails.js"],"sourcesContent":["import { createQueryPreloader, gql,useAp} from \"@apollo/client\"\nimport Game from \"../components/Game\"\nimport { useLoaderData } from \"react-router\";\nimport { useReadQuery,useApolloClient } from \"@apollo/client\";\nconst GET_GAME_BY_ID_QUERY=gql`query getGameById($id:ID!)\n{\n    getGameById(id:$id)\n    {\n        title,\n        imageURL,\n        genres\n        {\n            id,\n            name\n        }\n    }\n}\n`\n\nexport default function GameDetailsPage()\n{\n    const queryRef = useLoaderData();\n     const { data } = useReadQuery(queryRef);\n    return <Game game={data.getGameById} isSingle={true}/>\n\n}\nexport async function loader({params})\n{\n\nconst id=params.gameId.substring(1)\n return  preloadQuery(GET_GAME_BY_ID_QUERY, {variables:{id}})\n}\n\n"],"mappings":";;AAAA,SAASA,oBAAoB,EAAEC,GAAG,EAACC,KAAK,QAAO,gBAAgB;AAC/D,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,EAACC,eAAe,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC9D,MAAMC,oBAAoB,GAACR,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASS,eAAeA,CAAA,EACvC;EAAAC,EAAA;EACI,MAAMC,QAAQ,GAAGR,aAAa,CAAC,CAAC;EAC/B,MAAM;IAAES;EAAK,CAAC,GAAGR,YAAY,CAACO,QAAQ,CAAC;EACxC,oBAAOJ,OAAA,CAACL,IAAI;IAACW,IAAI,EAAED,IAAI,CAACE,WAAY;IAACC,QAAQ,EAAE;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAE1D;AAACT,EAAA,CANuBD,eAAe;EAAA,QAElBN,aAAa,EACZC,YAAY;AAAA;AAAAgB,EAAA,GAHVX,eAAe;AAOvC,OAAO,eAAeY,MAAMA,CAAC;EAACC;AAAM,CAAC,EACrC;EAEA,MAAMC,EAAE,GAACD,MAAM,CAACE,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC;EAClC,OAAQC,YAAY,CAAClB,oBAAoB,EAAE;IAACmB,SAAS,EAAC;MAACJ;IAAE;EAAC,CAAC,CAAC;AAC7D;AAAC,IAAAH,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}